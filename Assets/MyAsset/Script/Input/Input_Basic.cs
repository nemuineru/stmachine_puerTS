//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.13.0
//     from Assets/MyAsset/Script/Input/Input_Basic.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/MyAsset/Script/Input/Input_Basic.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @Input_Basic: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @Input_Basic()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input_Basic"",
    ""maps"": [
        {
            ""name"": ""Base"",
            ""id"": ""b267d258-d06d-4f73-8017-783427c6fc93"",
            ""actions"": [
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""ead18ff9-19f9-4c0f-9fcb-9b2111f225a3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Controller_MoveAxis"",
                    ""type"": ""Value"",
                    ""id"": ""93792c85-ae0a-493c-920a-aab599894c65"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Controller_LookAxis"",
                    ""type"": ""Value"",
                    ""id"": ""2263c5bf-ea2c-40e5-9c4b-693862707bac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Main_Button"",
                    ""type"": ""Button"",
                    ""id"": ""5ed09253-5ee9-41f0-b568-1655f17a383b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action_Button"",
                    ""type"": ""Button"",
                    ""id"": ""88d91bc6-35e8-4e0c-9397-d51c6c2732f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sub_Button"",
                    ""type"": ""Button"",
                    ""id"": ""90f74e08-d61f-4c19-a90d-758d6ce934a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Utility_Button"",
                    ""type"": ""Button"",
                    ""id"": ""d1d72049-7d99-4ce3-881d-ab44be88172d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Extra_1_Button"",
                    ""type"": ""Button"",
                    ""id"": ""5f4c9cb1-dd35-4ad2-8d9a-e611ac157e4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Extra_2_Button"",
                    ""type"": ""Button"",
                    ""id"": ""6582c544-4864-4617-8652-f626dfcf2250"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu_Button"",
                    ""type"": ""Button"",
                    ""id"": ""a19c0758-1f16-4937-9f63-1cfefd82a902"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SubMenu_Button"",
                    ""type"": ""Button"",
                    ""id"": ""e11ee433-043c-4654-9a74-45a065ed1ec1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugCMD_Reload"",
                    ""type"": ""Button"",
                    ""id"": ""7074b6be-25b4-433d-a88c-274c3bf2b612"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugCMD_Death"",
                    ""type"": ""Button"",
                    ""id"": ""4262a017-6b50-4e50-8f06-64e385205bc7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugCMD_ClearAll"",
                    ""type"": ""Button"",
                    ""id"": ""88e878bd-6338-418b-b368-af4cff1ec3a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2d76b9d1-7d5a-4188-98df-b06c16a0570f"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf89ced-a4db-4bed-84f3-b7ef24fcba0a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keybind"",
                    ""id"": ""338da0f2-13e4-4773-8173-a3af49f6614e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""496280eb-5b65-4f88-a0eb-0cfe9cf4d483"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""112d72dc-7b3b-461c-bca5-97252bc97b45"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2845ff48-a2c7-4e17-98cd-08f4db78912d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""53e91ca2-296f-4252-8400-c8a5585402f8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_MoveAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0cb73068-60ea-4dec-8da7-cb45854555e0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Main_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bbb32ca-f77b-48cf-a83f-e704e9a747ff"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Main_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56f9e9e2-ad8a-4110-ba14-c50261948f01"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2359f03a-3b2e-4be8-a9df-109c2c1b27aa"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3b9bf56-de42-49e9-8f14-09d7e2fae8cb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sub_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9e37965-ef18-4b82-ad6a-09b9ec2ea418"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Utility_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70850877-e284-470d-8870-7e5c48b86541"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extra_1_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""438259a8-998e-4d4b-964d-186bc4ad0405"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extra_2_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddeef8b3-ebd5-4191-9b02-685058a1b611"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a76ccfd8-f04d-47e5-8a06-bd9d7694809a"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubMenu_Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b038acd0-5b7d-4e1a-849f-f50aa944bbac"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_LookAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d3dba8e-cbcc-4e61-9005-dc6a857c77e0"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugCMD_Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8da2d3bb-2952-41a8-a892-e90e2200efe6"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugCMD_Death"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""495a7b66-d1c6-41d4-8bae-13db2c1e3b37"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugCMD_ClearAll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Base
        m_Base = asset.FindActionMap("Base", throwIfNotFound: true);
        m_Base_CursorPosition = m_Base.FindAction("CursorPosition", throwIfNotFound: true);
        m_Base_Controller_MoveAxis = m_Base.FindAction("Controller_MoveAxis", throwIfNotFound: true);
        m_Base_Controller_LookAxis = m_Base.FindAction("Controller_LookAxis", throwIfNotFound: true);
        m_Base_Main_Button = m_Base.FindAction("Main_Button", throwIfNotFound: true);
        m_Base_Action_Button = m_Base.FindAction("Action_Button", throwIfNotFound: true);
        m_Base_Sub_Button = m_Base.FindAction("Sub_Button", throwIfNotFound: true);
        m_Base_Utility_Button = m_Base.FindAction("Utility_Button", throwIfNotFound: true);
        m_Base_Extra_1_Button = m_Base.FindAction("Extra_1_Button", throwIfNotFound: true);
        m_Base_Extra_2_Button = m_Base.FindAction("Extra_2_Button", throwIfNotFound: true);
        m_Base_Menu_Button = m_Base.FindAction("Menu_Button", throwIfNotFound: true);
        m_Base_SubMenu_Button = m_Base.FindAction("SubMenu_Button", throwIfNotFound: true);
        m_Base_DebugCMD_Reload = m_Base.FindAction("DebugCMD_Reload", throwIfNotFound: true);
        m_Base_DebugCMD_Death = m_Base.FindAction("DebugCMD_Death", throwIfNotFound: true);
        m_Base_DebugCMD_ClearAll = m_Base.FindAction("DebugCMD_ClearAll", throwIfNotFound: true);
    }

    ~@Input_Basic()
    {
        UnityEngine.Debug.Assert(!m_Base.enabled, "This will cause a leak and performance issues, Input_Basic.Base.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Base
    private readonly InputActionMap m_Base;
    private List<IBaseActions> m_BaseActionsCallbackInterfaces = new List<IBaseActions>();
    private readonly InputAction m_Base_CursorPosition;
    private readonly InputAction m_Base_Controller_MoveAxis;
    private readonly InputAction m_Base_Controller_LookAxis;
    private readonly InputAction m_Base_Main_Button;
    private readonly InputAction m_Base_Action_Button;
    private readonly InputAction m_Base_Sub_Button;
    private readonly InputAction m_Base_Utility_Button;
    private readonly InputAction m_Base_Extra_1_Button;
    private readonly InputAction m_Base_Extra_2_Button;
    private readonly InputAction m_Base_Menu_Button;
    private readonly InputAction m_Base_SubMenu_Button;
    private readonly InputAction m_Base_DebugCMD_Reload;
    private readonly InputAction m_Base_DebugCMD_Death;
    private readonly InputAction m_Base_DebugCMD_ClearAll;
    /// <summary>
    /// Provides access to input actions defined in input action map "Base".
    /// </summary>
    public struct BaseActions
    {
        private @Input_Basic m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public BaseActions(@Input_Basic wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Base/CursorPosition".
        /// </summary>
        public InputAction @CursorPosition => m_Wrapper.m_Base_CursorPosition;
        /// <summary>
        /// Provides access to the underlying input action "Base/Controller_MoveAxis".
        /// </summary>
        public InputAction @Controller_MoveAxis => m_Wrapper.m_Base_Controller_MoveAxis;
        /// <summary>
        /// Provides access to the underlying input action "Base/Controller_LookAxis".
        /// </summary>
        public InputAction @Controller_LookAxis => m_Wrapper.m_Base_Controller_LookAxis;
        /// <summary>
        /// Provides access to the underlying input action "Base/Main_Button".
        /// </summary>
        public InputAction @Main_Button => m_Wrapper.m_Base_Main_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Action_Button".
        /// </summary>
        public InputAction @Action_Button => m_Wrapper.m_Base_Action_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Sub_Button".
        /// </summary>
        public InputAction @Sub_Button => m_Wrapper.m_Base_Sub_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Utility_Button".
        /// </summary>
        public InputAction @Utility_Button => m_Wrapper.m_Base_Utility_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Extra_1_Button".
        /// </summary>
        public InputAction @Extra_1_Button => m_Wrapper.m_Base_Extra_1_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Extra_2_Button".
        /// </summary>
        public InputAction @Extra_2_Button => m_Wrapper.m_Base_Extra_2_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/Menu_Button".
        /// </summary>
        public InputAction @Menu_Button => m_Wrapper.m_Base_Menu_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/SubMenu_Button".
        /// </summary>
        public InputAction @SubMenu_Button => m_Wrapper.m_Base_SubMenu_Button;
        /// <summary>
        /// Provides access to the underlying input action "Base/DebugCMD_Reload".
        /// </summary>
        public InputAction @DebugCMD_Reload => m_Wrapper.m_Base_DebugCMD_Reload;
        /// <summary>
        /// Provides access to the underlying input action "Base/DebugCMD_Death".
        /// </summary>
        public InputAction @DebugCMD_Death => m_Wrapper.m_Base_DebugCMD_Death;
        /// <summary>
        /// Provides access to the underlying input action "Base/DebugCMD_ClearAll".
        /// </summary>
        public InputAction @DebugCMD_ClearAll => m_Wrapper.m_Base_DebugCMD_ClearAll;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Base; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="BaseActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(BaseActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="BaseActions" />
        public void AddCallbacks(IBaseActions instance)
        {
            if (instance == null || m_Wrapper.m_BaseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BaseActionsCallbackInterfaces.Add(instance);
            @CursorPosition.started += instance.OnCursorPosition;
            @CursorPosition.performed += instance.OnCursorPosition;
            @CursorPosition.canceled += instance.OnCursorPosition;
            @Controller_MoveAxis.started += instance.OnController_MoveAxis;
            @Controller_MoveAxis.performed += instance.OnController_MoveAxis;
            @Controller_MoveAxis.canceled += instance.OnController_MoveAxis;
            @Controller_LookAxis.started += instance.OnController_LookAxis;
            @Controller_LookAxis.performed += instance.OnController_LookAxis;
            @Controller_LookAxis.canceled += instance.OnController_LookAxis;
            @Main_Button.started += instance.OnMain_Button;
            @Main_Button.performed += instance.OnMain_Button;
            @Main_Button.canceled += instance.OnMain_Button;
            @Action_Button.started += instance.OnAction_Button;
            @Action_Button.performed += instance.OnAction_Button;
            @Action_Button.canceled += instance.OnAction_Button;
            @Sub_Button.started += instance.OnSub_Button;
            @Sub_Button.performed += instance.OnSub_Button;
            @Sub_Button.canceled += instance.OnSub_Button;
            @Utility_Button.started += instance.OnUtility_Button;
            @Utility_Button.performed += instance.OnUtility_Button;
            @Utility_Button.canceled += instance.OnUtility_Button;
            @Extra_1_Button.started += instance.OnExtra_1_Button;
            @Extra_1_Button.performed += instance.OnExtra_1_Button;
            @Extra_1_Button.canceled += instance.OnExtra_1_Button;
            @Extra_2_Button.started += instance.OnExtra_2_Button;
            @Extra_2_Button.performed += instance.OnExtra_2_Button;
            @Extra_2_Button.canceled += instance.OnExtra_2_Button;
            @Menu_Button.started += instance.OnMenu_Button;
            @Menu_Button.performed += instance.OnMenu_Button;
            @Menu_Button.canceled += instance.OnMenu_Button;
            @SubMenu_Button.started += instance.OnSubMenu_Button;
            @SubMenu_Button.performed += instance.OnSubMenu_Button;
            @SubMenu_Button.canceled += instance.OnSubMenu_Button;
            @DebugCMD_Reload.started += instance.OnDebugCMD_Reload;
            @DebugCMD_Reload.performed += instance.OnDebugCMD_Reload;
            @DebugCMD_Reload.canceled += instance.OnDebugCMD_Reload;
            @DebugCMD_Death.started += instance.OnDebugCMD_Death;
            @DebugCMD_Death.performed += instance.OnDebugCMD_Death;
            @DebugCMD_Death.canceled += instance.OnDebugCMD_Death;
            @DebugCMD_ClearAll.started += instance.OnDebugCMD_ClearAll;
            @DebugCMD_ClearAll.performed += instance.OnDebugCMD_ClearAll;
            @DebugCMD_ClearAll.canceled += instance.OnDebugCMD_ClearAll;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="BaseActions" />
        private void UnregisterCallbacks(IBaseActions instance)
        {
            @CursorPosition.started -= instance.OnCursorPosition;
            @CursorPosition.performed -= instance.OnCursorPosition;
            @CursorPosition.canceled -= instance.OnCursorPosition;
            @Controller_MoveAxis.started -= instance.OnController_MoveAxis;
            @Controller_MoveAxis.performed -= instance.OnController_MoveAxis;
            @Controller_MoveAxis.canceled -= instance.OnController_MoveAxis;
            @Controller_LookAxis.started -= instance.OnController_LookAxis;
            @Controller_LookAxis.performed -= instance.OnController_LookAxis;
            @Controller_LookAxis.canceled -= instance.OnController_LookAxis;
            @Main_Button.started -= instance.OnMain_Button;
            @Main_Button.performed -= instance.OnMain_Button;
            @Main_Button.canceled -= instance.OnMain_Button;
            @Action_Button.started -= instance.OnAction_Button;
            @Action_Button.performed -= instance.OnAction_Button;
            @Action_Button.canceled -= instance.OnAction_Button;
            @Sub_Button.started -= instance.OnSub_Button;
            @Sub_Button.performed -= instance.OnSub_Button;
            @Sub_Button.canceled -= instance.OnSub_Button;
            @Utility_Button.started -= instance.OnUtility_Button;
            @Utility_Button.performed -= instance.OnUtility_Button;
            @Utility_Button.canceled -= instance.OnUtility_Button;
            @Extra_1_Button.started -= instance.OnExtra_1_Button;
            @Extra_1_Button.performed -= instance.OnExtra_1_Button;
            @Extra_1_Button.canceled -= instance.OnExtra_1_Button;
            @Extra_2_Button.started -= instance.OnExtra_2_Button;
            @Extra_2_Button.performed -= instance.OnExtra_2_Button;
            @Extra_2_Button.canceled -= instance.OnExtra_2_Button;
            @Menu_Button.started -= instance.OnMenu_Button;
            @Menu_Button.performed -= instance.OnMenu_Button;
            @Menu_Button.canceled -= instance.OnMenu_Button;
            @SubMenu_Button.started -= instance.OnSubMenu_Button;
            @SubMenu_Button.performed -= instance.OnSubMenu_Button;
            @SubMenu_Button.canceled -= instance.OnSubMenu_Button;
            @DebugCMD_Reload.started -= instance.OnDebugCMD_Reload;
            @DebugCMD_Reload.performed -= instance.OnDebugCMD_Reload;
            @DebugCMD_Reload.canceled -= instance.OnDebugCMD_Reload;
            @DebugCMD_Death.started -= instance.OnDebugCMD_Death;
            @DebugCMD_Death.performed -= instance.OnDebugCMD_Death;
            @DebugCMD_Death.canceled -= instance.OnDebugCMD_Death;
            @DebugCMD_ClearAll.started -= instance.OnDebugCMD_ClearAll;
            @DebugCMD_ClearAll.performed -= instance.OnDebugCMD_ClearAll;
            @DebugCMD_ClearAll.canceled -= instance.OnDebugCMD_ClearAll;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="BaseActions.UnregisterCallbacks(IBaseActions)" />.
        /// </summary>
        /// <seealso cref="BaseActions.UnregisterCallbacks(IBaseActions)" />
        public void RemoveCallbacks(IBaseActions instance)
        {
            if (m_Wrapper.m_BaseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="BaseActions.AddCallbacks(IBaseActions)" />
        /// <seealso cref="BaseActions.RemoveCallbacks(IBaseActions)" />
        /// <seealso cref="BaseActions.UnregisterCallbacks(IBaseActions)" />
        public void SetCallbacks(IBaseActions instance)
        {
            foreach (var item in m_Wrapper.m_BaseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BaseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="BaseActions" /> instance referencing this action map.
    /// </summary>
    public BaseActions @Base => new BaseActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Base" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="BaseActions.AddCallbacks(IBaseActions)" />
    /// <seealso cref="BaseActions.RemoveCallbacks(IBaseActions)" />
    public interface IBaseActions
    {
        /// <summary>
        /// Method invoked when associated input action "CursorPosition" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCursorPosition(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_MoveAxis" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_MoveAxis(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_LookAxis" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_LookAxis(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Main_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMain_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Action_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAction_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Sub_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSub_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Utility_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnUtility_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Extra_1_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnExtra_1_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Extra_2_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnExtra_2_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Menu_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMenu_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SubMenu_Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSubMenu_Button(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "DebugCMD_Reload" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDebugCMD_Reload(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "DebugCMD_Death" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDebugCMD_Death(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "DebugCMD_ClearAll" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDebugCMD_ClearAll(InputAction.CallbackContext context);
    }
}
